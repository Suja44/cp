#include<bits/stdc++.h>
using namespace std;
using namespace std::chrono;
#define int                          long long
#define endl                        ("\n")
#define pb                          push_back
#define sz                          size()
#define p                           pair
#define f                           first
#define s                           second
#define fi(i,a,n)                   for(int i=a;i<n;i++)
#define vi                          vector<int>
#define inp(v)						for (auto &x : v) cin >> x;
#define out(v)                      for (auto  x : v) cout<<x<<" ";
#define all(c)                      c.begin() , c.end()
#define fastio                      ios_base::sync_with_stdio(false), cin.tie(nullptr) , cout.tie(nullptr);
#define pn 							cout<<"NO\n"
#define py 							cout<<"YES\n"
#define mx 							1e14
#define w(t) 						int t=1; cin>>t; while(t--)
#define cntbits(x) 					__builtin_popcountll(x)
#define lagzrobits(x) 			    __builtin_ctzll(x)
#define leadzrobits(x)              __builtin_clzll(x)
#define mod 						1000000007

template<typename T> istream& operator>>(istream& in, vector<T>& a) {for (auto &x : a) in >> x; return in;};
template<typename T> ostream& operator<<(ostream& out, vector<T>& a) {for (auto &x : a) out << x << ' '; return out;};

int modulo(int a, int b) {
	return (a % b + b) % b;
}

void sol() {
	int n;
	cin >> n;
	vi v1(n), v2(n);
	cin >> v1 >> v2;
	v1[0] = 0;
	fi(i, 1, n) {
		v1[i] += v1[i - 1];
		v2[i] += v2[i - 1];

	}
	int ans = LONG_MAX;
	fi(i, 0, n) {
		int a = v1[n - 1] - v1[i];
		int b = (i > 0) ? v2[i - 1] : 0;
		ans = min(ans, max(a, b));
	}
	cout << ans << endl;

}
void sol2() {
	int n, k;
	cin >> n >> k;
	vi v(n);
	cin >> v;
	sort(all(v));
	int ans = 0;
	int t = k;
	for (int i = n - 1; k > 0; i -= 2) {
		ans += v[i - 1] / v[i];
		k--;
	}
	for (int i = 0; i < n - 2 * t; i++) {
		ans += v[i];
	}
	cout << ans << endl;

}
void sol3() {

	string s;
	cin >> s;
	int n = 1;
	int ans = LONG_MAX;
	for (int i = 0; i < 40; i++) {
		int x = 0, y = 0, a = 0;
		string t = to_string(n);
		while (1) {
			if (x == s.sz || y == t.sz) {
				break;
			}
			if (s[x] == t[y]) {
				x++; y++;
			} else {
				a++;
				x++;
			}

		}
		if (y == t.sz) {
			int f=(s.sz - t.sz);
			ans = min(ans,f);
		} else if (x == s.sz) {
			int h=a + t.sz - y;
			ans = min(ans,h);
		}
		
		// cout<<s<<" "<<t<<" "<<ans<<endl;
		
		n *= 2;
	}
	cout<<ans<<endl;
}

int32_t main() {
	fastio

	w(t) {
		sol3();
	}
}
